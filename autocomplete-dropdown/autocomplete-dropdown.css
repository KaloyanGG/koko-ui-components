:root {
  --input-focused: rgb(31, 128, 239);
  --border-radius: 5px;

  --border-width-small: 1px;
  --border-width-large: 2px;
  --difference-in-borders: calc(
    var(--border-width-large) - var(--border-width-small)
  );

  --light-gray: lightgray;
  --lighter-gray: rgb(240, 240, 240);
  /* * not working * */
  /* --half-border-width: calc(- var(--border-width)/2); */
}

.autocomplete-dropdown {
  &,
  .input-wrapper {
    height: 100%;
    width: 100%;
  }

  &,
  & * {
    background-color: inherit;
  }

  .input-wrapper {
    position: relative;
    display: flex;
    justify-content: space-between;

    border: var(--border-width-large) solid var(--light-gray);
    border-radius: var(--border-radius);
    padding: 0 15px;

    &:hover {
      border-color: black;
    }

    label {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      color: var(--light-gray);
      pointer-events: none;
      transition: all 0.2s ease;
      text-align: center;
    }

    label.label-for-input-focused {
      /* not working 
      top: calc(- calc(var(--border-width-large)/2));
      must be NOT dynamic */
      top: -1px;

      color: var(--input-focused);
      font-size: 0.8em;
      &::before {
        z-index: -10;
        position: absolute;
        content: "";
        left: 50%;
        transform: translateX(-50%);
        background-color: inherit;
        width: 120%;
        height: 100%;
      }
    }

    input {
      border-radius: inherit;
      font-size: 1em;
      min-width: 0;
      flex-grow: 1;
    }

    button {
      margin-top: auto;
      margin-bottom: auto;
      border-radius: 50%;
      position: relative;
      background-color: transparent;
      &:hover {
        background-color: var(--lighter-gray);
      }

      svg {
        width: 20px;
        border-radius: inherit;
        background-color: transparent;
      }
    }
    button.svg-btn-cancel {
      display: none;
    }

    .animated {
      &::before {
        animation-name: ani;
        animation-duration: 1s;
        animation-direction: normal;
        position: absolute;
        content: "";
        width: 100%;
        height: 100%;
        transform: scale(0);
        background-color: gray;
        border-radius: inherit;
        animation-name: ani;
        animation-duration: 500ms;
        animation-direction: normal;
        animation-timing-function: ease-in-out;
        animation-iteration-count: 1;
      }
    }
  }
  position: relative;
  ul {
    width: 100%;

    z-index: 1;
    position: absolute;
    display: none;
    border: var(--border-width-small) solid rgb(235, 235, 235);
    border-top: none;
    border-radius: var(--border-radius);
    max-height: 15vh;
    overflow: auto;
    overflow-x: hidden;
    scrollbar-width: thin;
    scroll-behavior: smooth;
    li {
      /* padding: 0.5vh
        calc(5% + calc(((1 + 2 * 0.05) * var(--difference-in-borders)))); */
      /* padding: 0
        calc(
          20% + 0.2 * var(--border-width-large) + var(--difference-in-borders)
        ); */
      padding: 0 16px;

      &:hover {
        background-color: var(--lighter-gray);
      }
    }
  }
}

.focused {
  border-width: var(--border-width-large) !important;
  border-color: var(--input-focused) !important;
}

.rotated {
  transform: rotate(180deg);
}

.d-block {
  display: block !important;
}

.no-hover {
  &:hover {
    background-color: unset !important;
  }
}

@keyframes ani {
  100% {
    transform: scale(1);
    background-color: transparent;
  }
}
